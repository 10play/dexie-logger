/**
   * @license
   * author: Noam Golani <noam.golani@gmail.com>
   * dexie-logger.js v1.2.3
   * Released under the MIT license.
   */
this["dexie-logger"]=function(){"use strict";const o={};return e=>{const{tableWhiteList:n,tablesBlackList:s,operationsBlackList:t,operationsWhiteList:r}=e||o;if(n&&s)throw Error("You can't use both tableWhiteList and tablesBlackList at the same time");if(r&&t)throw Error("You can't use both operationsWhiteList and operationsBlackList at the same time");const l=(o,e)=>{let l=!1;l=r?r.includes(e):!t||!t.includes(e);let c=!1;return c=n?n.includes(o):!s||!s.includes(o),l&&c};return{stack:"dbcore",name:"logger",create:o=>({...o,table(e){const n=o.table(e);return{...n,mutate:async o=>{const s=performance.now();return l(e,"mutate")&&(console.groupCollapsed(`Dexie | ${e} [ Mutate ] => Request`),console.log(o.type),console.log(JSON.stringify(o,void 0,2)),console.groupEnd()),n.mutate(o).then((o=>{const n=performance.now()-s;return l(e,"mutate")&&(console.groupCollapsed(`Dexie | ${e} [ Mutate ] (${n.toFixed(1)} ms) <= Response`),console.log("-> Duration: "+n+" ms"),console.log(JSON.stringify(o,void 0,2)),console.groupEnd()),o}))},get:async o=>{const s=performance.now();return l(e,"get")&&(console.groupCollapsed(`Dexie | ${e} [ Get ] => Request`),console.log(o.key),console.log(JSON.stringify(o,void 0,2)),console.groupEnd()),n.get(o).then((o=>{const n=performance.now()-s;return l(e,"get")&&(console.groupCollapsed(`Dexie | ${e} [ Get ] (${n.toFixed(1)} ms) <= Response`),console.log("-> Duration: "+n+" ms"),console.log(JSON.stringify(o,void 0,2)),console.groupEnd()),o}))},getMany:async o=>{const s=performance.now();return l(e,"getMany")&&(console.groupCollapsed(`Dexie | ${e} [ Get Many ] => Request`),console.log(o.keys),console.log(JSON.stringify(o,void 0,2)),console.groupEnd()),n.getMany(o).then((o=>{const n=performance.now()-s;return l(e,"getMany")&&(console.groupCollapsed(`Dexie | ${e} [ Get Many ] (${n.toFixed(1)} ms) <= Response`),console.log("-> Duration: "+n+" ms"),console.log(JSON.stringify(o,void 0,2)),console.groupEnd()),o}))},query:async o=>{const s=performance.now();return l(e,"query")&&(console.groupCollapsed(`Dexie | ${e}  [ Query ] => Request`),console.log(o.query),console.log(o),console.groupEnd()),n.query(o).then((o=>{const n=performance.now()-s;return l(e,"query")&&(console.groupCollapsed(`Dexie | ${e}  [ Query ] (${n.toFixed(1)} ms) <= Response`),console.log("-> Duration: "+n+" ms"),console.log(o),console.groupEnd()),o}))},openCursor:async o=>{const s=performance.now();return l(e,"openCursor")&&(console.groupCollapsed(`Dexie | ${e} [ Open Cursor ] => Request`),console.log(`Dexie | Open Cursor | ${JSON.stringify(o.query,void 0,2)}, ${e} - `),console.groupEnd()),n.openCursor(o).then((o=>{const n=performance.now()-s;return l(e,"openCursor")&&(console.groupCollapsed(`Dexie | ${e} [ Open Cursor ] (${n.toFixed(1)} ms) <= Response`),console.log("-> Duration: "+n+" ms"),console.log(JSON.stringify(o,void 0,2)),console.groupEnd()),o}))},count:async o=>{const s=performance.now();return l(e,"count")&&(console.groupCollapsed(`Dexie | ${e} [ Count ] => Request`),console.log(o.query),console.log(o),console.groupEnd()),n.count(o).then((o=>{const n=performance.now()-s;return l(e,"count")&&(console.groupCollapsed(`Dexie | ${e} [ Count ] (${n.toFixed(1)} ms) <= Response`),console.log("-> Duration: "+n+" ms"),console.log(o),console.groupEnd()),o}))}}}})}}}();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXgubWluLmpzIiwic291cmNlcyI6WyIuLi9zcmMvaW5kZXgudHMiXSwic291cmNlc0NvbnRlbnQiOltudWxsXSwibmFtZXMiOlsiREVGQVVMVF9QUk9QUyIsImxvZ2dlclByb3BzIiwidGFibGVXaGl0ZUxpc3QiLCJ0YWJsZXNCbGFja0xpc3QiLCJvcGVyYXRpb25zQmxhY2tMaXN0Iiwib3BlcmF0aW9uc1doaXRlTGlzdCIsIkVycm9yIiwic2hvdWxkTG9nIiwidGFibGVOYW1lIiwib3BlcmF0aW9uIiwic2hvdWxkTG9nT3BlcmF0aW9uIiwiaW5jbHVkZXMiLCJzaG91bGRMb2dUYWJsZSIsInN0YWNrIiwibmFtZSIsImNyZWF0ZSIsImRvd25sZXZlbERhdGFiYXNlIiwidGFibGUiLCJkb3dubGV2ZWxUYWJsZSIsIm11dGF0ZSIsImFzeW5jIiwicmVxIiwic3RhcnRUaW1lIiwicGVyZm9ybWFuY2UiLCJub3ciLCJjb25zb2xlIiwiZ3JvdXBDb2xsYXBzZWQiLCJsb2ciLCJ0eXBlIiwiSlNPTiIsInN0cmluZ2lmeSIsInVuZGVmaW5lZCIsImdyb3VwRW5kIiwidGhlbiIsInJlcyIsInRpbWVFbGFwc2VkIiwidG9GaXhlZCIsImdldCIsImtleSIsImdldE1hbnkiLCJrZXlzIiwicXVlcnkiLCJvcGVuQ3Vyc29yIiwiY291bnQiXSwibWFwcGluZ3MiOiI7Ozs7Ozs2Q0FpR0EsTUFBTUEsRUFBNkIsQ0FBQSxTQUdqQ0MsSUFFQSxNQUFNQyxlQUNKQSxFQUFjQyxnQkFDZEEsRUFBZUMsb0JBQ2ZBLEVBQW1CQyxvQkFDbkJBLEdBQ0VKLEdBQWVELEVBQ25CLEdBQUlFLEdBQWtCQyxFQUNwQixNQUFNRyxNQUNKLDBFQUdKLEdBQUlELEdBQXVCRCxFQUN6QixNQUFNRSxNQUNKLG1GQUdKLE1BQU1DLEVBQVksQ0FBQ0MsRUFBbUJDLEtBQ3BDLElBQUlDLEdBQXFCLEVBR3ZCQSxFQURFTCxFQUNtQkEsRUFBb0JNLFNBQVNGLElBQzNDTCxJQUNlQSxFQUFvQk8sU0FBU0Ys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
