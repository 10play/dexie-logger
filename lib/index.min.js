/**
   * @license
   * author: Noam Golani <noam.golani@gmail.com>
   * dexie-logger.js v1.2.3
   * Released under the MIT license.
   */
this["dexie-logger"]=function(){"use strict";const e=()=>{document.body.appendChild((e=>{const o=document.createElement("div");return o.innerHTML=e,o.firstChild})('<div style="background-color: purple; border-radius: 50%; height: 50px; width: 50px; position: fixed; bottom: 20px; right: 20px;">test</div>'))},o={mutate:(e,{tableName:o})=>(console.groupCollapsed(`Dexie | ${o} [ Mutate ] => Request`),console.log(e.type),console.log(JSON.stringify(e,void 0,2)),console.groupEnd(),(e,{timeElapsed:n})=>{console.groupCollapsed(`Dexie | ${o} [ Mutate ] (${n.toFixed(1)} ms) <= Response`),console.log("-> Duration: "+n+" ms"),console.log(JSON.stringify(e,void 0,2)),console.groupEnd()}),get:(e,{tableName:o})=>(console.groupCollapsed(`Dexie | ${o} [ Get ] => Request`),console.log(e.key),console.log(JSON.stringify(e,void 0,2)),console.groupEnd(),(e,{timeElapsed:n})=>{console.groupCollapsed(`Dexie | ${o} [ Get ] (${n.toFixed(1)} ms) <= Response`),console.log("-> Duration: "+n+" ms"),console.log(JSON.stringify(e,void 0,2)),console.groupEnd()}),getMany:(e,{tableName:o})=>(console.groupCollapsed(`Dexie | ${o} [ Get Many ] => Request`),console.log(e.keys),console.log(JSON.stringify(e,void 0,2)),console.groupEnd(),(e,{timeElapsed:n})=>{console.groupCollapsed(`Dexie | ${o} [ Get Many ] (${n.toFixed(1)} ms) <= Response`),console.log("-> Duration: "+n+" ms"),console.log(JSON.stringify(e,void 0,2)),console.groupEnd()}),query:(e,{tableName:o})=>(console.groupCollapsed(`Dexie | ${o}  [ Query ] => Request`),console.log(e.query),console.log(e),console.groupEnd(),(e,{timeElapsed:n})=>{console.groupCollapsed(`Dexie | ${o}  [ Query ] (${n.toFixed(1)} ms) <= Response`),console.log("-> Duration: "+n+" ms"),console.log(e),console.groupEnd()}),openCursor:(e,{tableName:o})=>(console.groupCollapsed(`Dexie | ${o} [ Open Cursor ] => Request`),console.log(`Dexie | Open Cursor | ${JSON.stringify(e.query,void 0,2)}, ${o} - `),console.groupEnd(),(e,{timeElapsed:n})=>{console.groupCollapsed(`Dexie | ${o} [ Open Cursor ] (${n.toFixed(1)} ms) <= Response`),console.log("-> Duration: "+n+" ms"),console.log(JSON.stringify(e,void 0,2)),console.groupEnd()}),count:(e,{tableName:o})=>(console.groupCollapsed(`Dexie | ${o} [ Count ] => Request`),console.log(e.query),console.log(e),console.groupEnd(),(e,{timeElapsed:n})=>{console.groupCollapsed(`Dexie | ${o} [ Count ] (${n.toFixed(1)} ms) <= Response`),console.log("-> Duration: "+n+" ms"),console.log(e),console.groupEnd()})},n=[,"equal","range","any","never"],t=e=>{switch(n[e.type]){case"equal":return"equal";case"range":return`${e.lowerOpen?"(":"["}${JSON.stringify(e.lower)}:${JSON.stringify(e.upper)}${e.upperOpen?")":"]"}`;case"any":return"any";default:return"never"}},r=e=>`query:[${e.index&&e.index.name||"primary"},range:${t(e.range)}]`,s=(e,o)=>{const n=l.has(e),t=performance.now();n?l.get(e).push(o):(l.set(e,[o]),e.addEventListener("complete",(()=>{const o=performance.now()-t;console.log(`Ended transaction (${o.toFixed(1)})`,l.get(e)),l.delete(e)})))},a={},l=new Map;return n=>{const{tableWhiteList:l,tablesBlackList:c,operationsBlackList:i,operationsWhiteList:u}=n||a;if(e(),l&&c)throw Error("You can't use both tableWhiteList and tablesBlackList at the same time");if(u&&i)throw Error("You can't use both operationsWhiteList and operationsBlackList at the same time");const p=(e,o)=>{let n=!1;n=u?u.includes(o):!i||!i.includes(o);let t=!1;return t=l?l.includes(e):!c||!c.includes(e),n&&t},g=o;return{stack:"dbcore",name:"logger",create:e=>({...e,table(o){const n=e.table(o);return{...n,mutate:async e=>{const r=performance.now(),a=((e,o)=>{let n="";switch(o.type){case"add":n="";break;case"put":o.changeSpec?n=`fields:${Object.keys(o.changeSpec).join(",")}`:o.changeSpecs?n=`fields:${o.changeSpecs.map((e=>Object.keys(e).join(","))).join(",")}`:o.criteria?n=JSON.stringify(o.criteria):o.keys&&(n="byKeys");break;case"delete":n=o.criteria?JSON.stringify(o.criteria):"byKeys";break;case"deleteRange":n=o.range?t(o.range):"all"}return`[${e},mutate,${o.type},${n}]`})(o,e),l=e.trans;let c;return s(l,a),p(o,"mutate")&&(c=g.mutate?.(e,{tableName:o})),n.mutate(e).then((e=>{const n=performance.now()-r;return p(o,"mutate")&&c?.(e,{timeElapsed:n}),e}))},get:async e=>{const t=performance.now(),r=(e=>`[${e},get,byKey]`)(o),a=e.trans;let l;return s(a,r),p(o,"get")&&(l=g.get?.(e,{tableName:o})),n.get(e).then((e=>{const n=performance.now()-t;return p(o,"get")&&l?.(e,{timeElapsed:n}),e}))},getMany:async e=>{const t=performance.now(),r=((e,o)=>`[${e},getMany,byKeys${o.cache?`,${o.cache}`:""}]`)(o,e),a=e.trans;let l;return s(a,r),p(o,"getMany")&&(l=g.getMany?.(e,{tableName:o})),n.getMany(e).then((e=>{const n=performance.now()-t;return p(o,"getMany")&&l?.(e,{timeElapsed:n}),e}))},query:async e=>{const t=performance.now(),a=((e,o)=>`[${e},query,${r(o.query)}]`)(o,e),l=e.trans;let c;return s(l,a),p(o,"query")&&(c=g.query?.(e,{tableName:o})),n.query(e).then((e=>{const n=performance.now()-t;return p(o,"query")&&c?.(e,{timeElapsed:n}),e}))},openCursor:async e=>{const t=performance.now(),a=((e,o)=>`[${e},openCursor${o.reverse?",reverse":""},${r(o.query)}]`)(o,e),l=e.trans;let c;return s(l,a),p(o,"openCursor")&&(c=g.openCursor?.(e,{tableName:o})),n.openCursor(e).then((e=>{const n=performance.now()-t;return p(o,"openCursor")&&c?.(e,{timeElapsed:n}),e}))},count:async e=>{const t=performance.now(),a=((e,o)=>`[${e},count,${r(o.query)}]`)(o,e),l=e.trans;let c;return s(l,a),p(o,"count")&&(c=g.count?.(e,{tableName:o})),n.count(e).then((e=>{const n=performance.now()-t;return p(o,"count")&&c?.(e,{timeElapsed:n}),e}))}}}})}}}();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
