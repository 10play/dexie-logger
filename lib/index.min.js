/**
   * @license
   * author: Noam Golani <noam.golani@gmail.com>
   * dexie-logger.js v1.2.4
   * Released under the MIT license.
   */
!function(e){"use strict";const o={mutate:(e,{tableName:o})=>(console.groupCollapsed(`Dexie | ${o} [ Mutate ] => Request`),console.log(e.type),console.log(JSON.stringify(e,void 0,2)),console.groupEnd(),(e,{timeElapsed:t})=>{console.groupCollapsed(`Dexie | ${o} [ Mutate ] (${t.toFixed(1)} ms) <= Response`),console.log("-> Duration: "+t+" ms"),console.log(JSON.stringify(e,void 0,2)),console.groupEnd()}),get:(e,{tableName:o})=>(console.groupCollapsed(`Dexie | ${o} [ Get ] => Request`),console.log(e.key),console.log(JSON.stringify(e,void 0,2)),console.groupEnd(),(e,{timeElapsed:t})=>{console.groupCollapsed(`Dexie | ${o} [ Get ] (${t.toFixed(1)} ms) <= Response`),console.log("-> Duration: "+t+" ms"),console.log(JSON.stringify(e,void 0,2)),console.groupEnd()}),getMany:(e,{tableName:o})=>(console.groupCollapsed(`Dexie | ${o} [ Get Many ] => Request`),console.log(e.keys),console.log(JSON.stringify(e,void 0,2)),console.groupEnd(),(e,{timeElapsed:t})=>{console.groupCollapsed(`Dexie | ${o} [ Get Many ] (${t.toFixed(1)} ms) <= Response`),console.log("-> Duration: "+t+" ms"),console.log(JSON.stringify(e,void 0,2)),console.groupEnd()}),query:(e,{tableName:o})=>(console.groupCollapsed(`Dexie | ${o}  [ Query ] => Request`),console.log(e.query),console.log(e),console.groupEnd(),(e,{timeElapsed:t})=>{console.groupCollapsed(`Dexie | ${o}  [ Query ] (${t.toFixed(1)} ms) <= Response`),console.log("-> Duration: "+t+" ms"),console.log(e),console.groupEnd()}),openCursor:(e,{tableName:o})=>(console.groupCollapsed(`Dexie | ${o} [ Open Cursor ] => Request`),console.log(`Dexie | Open Cursor | ${JSON.stringify(e.query,void 0,2)}, ${o} - `),console.groupEnd(),(e,{timeElapsed:t})=>{console.groupCollapsed(`Dexie | ${o} [ Open Cursor ] (${t.toFixed(1)} ms) <= Response`),console.log("-> Duration: "+t+" ms"),console.log(JSON.stringify(e,void 0,2)),console.groupEnd()}),count:(e,{tableName:o})=>(console.groupCollapsed(`Dexie | ${o} [ Count ] => Request`),console.log(e.query),console.log(e),console.groupEnd(),(e,{timeElapsed:t})=>{console.groupCollapsed(`Dexie | ${o} [ Count ] (${t.toFixed(1)} ms) <= Response`),console.log("-> Duration: "+t+" ms"),console.log(e),console.groupEnd()})},t={mutate:(e,{tableName:o})=>(t,{timeElapsed:n})=>{console.log(`Dexie | ${o} [ Mutate - ${e.type} ] (${n.toFixed(2)} ms)`)},get:(e,{tableName:o})=>(t,{timeElapsed:n})=>{console.log(`Dexie | ${o} [ Get - ${e.key} ] (${n.toFixed(2)} ms)`)},getMany:(e,{tableName:o})=>(e,{timeElapsed:t})=>{console.log(`Dexie | ${o} [ Get Many ] (${t.toFixed(2)} ms)`)},query:(e,{tableName:o})=>(t,{timeElapsed:n})=>{console.log(`Dexie | ${o} [ Query -  ${s(e.query)} ] (${n.toFixed(2)} ms)`)},openCursor:(e,{tableName:o})=>(t,{timeElapsed:n})=>{console.log(`Dexie | ${o} [ Open Cursor -  ${s(e.query)} ] (${n.toFixed(2)} ms)`)},count:(e,{tableName:o})=>(t,{timeElapsed:n})=>{console.log(`Dexie | ${o} [ Count -  ${s(e.query)} ] (${n.toFixed(2)} ms)`)}},n=[,"equal","range","any","never"],s=e=>`query:[${e.index&&e.index.name||"primary"},range:${(e=>{switch(n[e.type]){case"equal":return"equal";case"range":return`${e.lowerOpen?"(":"["}${JSON.stringify(e.lower)}:${JSON.stringify(e.upper)}${e.upperOpen?")":"]"}`;case"any":return"any";default:return"never"}})(e.range)}]`;var l;e.LogType=void 0,(l=e.LogType||(e.LogType={})).Default="DEFAULT",l.Minimal="MINIMAL";const r={logType:e.LogType.Default};e.default=n=>{const{tableWhiteList:s,tablesBlackList:l,operationsBlackList:a,operationsWhiteList:u,logType:i}={...r,...n};if(s&&l)throw Error("You can't use both tableWhiteList and tablesBlackList at the same time");if(u&&a)throw Error("You can't use both operationsWhiteList and operationsBlackList at the same time");const c=(e,o)=>{let t=!1;t=u?u.includes(o):!a||!a.includes(o);let n=!1;return n=s?s.includes(e):!l||!l.includes(e),t&&n},p=(n=>{switch(n){case e.LogType.Minimal:return t;case e.LogType.Default:default:return o}})(i);return{stack:"dbcore",name:"logger",create:e=>({...e,table(o){const t=e.table(o);return{...t,mutate:async e=>{const n=performance.now();let s;return c(o,"mutate")&&(s=p.mutate?.(e,{tableName:o})),t.mutate(e).then((e=>{const t=performance.now()-n;return c(o,"mutate")&&s?.(e,{timeElapsed:t}),e}))},get:async e=>{const n=performance.now();let s;return c(o,"get")&&(s=p.get?.(e,{tableName:o})),t.get(e).then((e=>{const t=performance.now()-n;return c(o,"get")&&s?.(e,{timeElapsed:t}),e}))},getMany:async e=>{const n=performance.now();let s;return c(o,"getMany")&&(s=p.getMany?.(e,{tableName:o})),t.getMany(e).then((e=>{const t=performance.now()-n;return c(o,"getMany")&&s?.(e,{timeElapsed:t}),e}))},query:async e=>{const n=performance.now();let s;return c(o,"query")&&(s=p.query?.(e,{tableName:o})),t.query(e).then((e=>{const t=performance.now()-n;return c(o,"query")&&s?.(e,{timeElapsed:t}),e}))},openCursor:async e=>{const n=performance.now();let s;return c(o,"openCursor")&&(s=p.openCursor?.(e,{tableName:o})),t.openCursor(e).then((e=>{const t=performance.now()-n;return c(o,"openCursor")&&s?.(e,{timeElapsed:t}),e}))},count:async e=>{const n=performance.now();let s;return c(o,"count")&&(s=p.count?.(e,{tableName:o})),t.count(e).then((e=>{const t=performance.now()-n;return c(o,"count")&&s?.(e,{timeElapsed:t}),e}))}}}})}},e.generateQueryRequestKey=s,Object.defineProperty(e,"__esModule",{value:!0})}(this["dexie-logger"]=this["dexie-logger"]||{});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXgubWluLmpzIiwic291cmNlcyI6WyIuLi9zcmMvbG9nZ2Vycy9kZWZhdWx0LnRzIiwiLi4vc3JjL2xvZ2dlcnMvbWluaW1hbC50cyIsIi4uL3NyYy9pbmRleC50cyJdLCJzb3VyY2VzQ29udGVudCI6W251bGwsbnVsbCxudWxsXSwibmFtZXMiOlsiZGVmYXVsdExvZ2dpbmdDYWxsYmFja3MiLCJtdXRhdGUiLCJyZXEiLCJ0YWJsZU5hbWUiLCJjb25zb2xlIiwiZ3JvdXBDb2xsYXBzZWQiLCJsb2ciLCJ0eXBlIiwiSlNPTiIsInN0cmluZ2lmeSIsInVuZGVmaW5lZCIsImdyb3VwRW5kIiwicmVzIiwidGltZUVsYXBzZWQiLCJ0b0ZpeGVkIiwiZ2V0Iiwia2V5IiwiZ2V0TWFueSIsImtleXMiLCJxdWVyeSIsIm9wZW5DdXJzb3IiLCJjb3VudCIsIm1pbmltYWxMb2dnaW5nQ2FsbGJhY2tzIiwiX3JlcyIsIl9yZXEiLCJnZW5lcmF0ZVF1ZXJ5UmVxdWVzdEtleSIsIlJBTkdFX1RZUEVTIiwiaW5kZXgiLCJuYW1lIiwicmFuZ2UiLCJsb3dlck9wZW4iLCJsb3dlciIsInVwcGVyIiwidXBwZXJPcGVuIiwiZ2VuZXJhdGVSYW5nZUtleSIsIkxvZ1R5cGUiLCJleHBvcnRzIiwiREVGQVVMVF9QUk9QUyIsImxvZ1R5cGUiLCJEZWZhdWx0IiwibG9nZ2VyUHJvcHMiLCJ0YWJsZVdoaXRlTGlzdCIsInRhYmxlc0JsYWNrTGlzdCIsIm9wZXJhdGlvbnNCbGFja0xpc3QiLCJvcGVyYXRpb25zV2hpdGVMaXN0IiwiRXJyb3IiLCJzaG91bGRMb2ciLCJvcGVyYXRpb24iLCJzaG91bGRMb2dPcGVyYXRpb24iLCJpbmNsdWRlcyIsInNob3VsZExvZ1RhYmxlIiwiY2FsbGJhY2tzIiwiTWluaW1hbCIsImxvZ2dlcnNDYWxsYmFja3NGcm9tTG9nVHlwZSIsInN0YWNrIiwiY3JlYXRlIiwiZG93bmxldmVsRGF0YWJhc2UiLCJ0YWJsZSIsImRvd25sZXZlbFRhYmxlIiwiYXN5bmMi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
